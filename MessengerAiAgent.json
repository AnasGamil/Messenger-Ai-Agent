{
  "name": "MessengerAiAgent",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "fb-webhook",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "4240b3d3-564d-4f63-84ee-deb39968192c",
      "name": "Facebook Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -1540,
        -180
      ],
      "webhookId": "facebook-messenger-webhook"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "verification-condition",
              "leftValue": "={{ $json.query['hub.mode'] }}",
              "rightValue": "subscribe",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "dd1bf84b-b253-456d-a2a8-aea6bf23ac9a",
      "name": "Webhook Verification Check",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -1320,
        -180
      ]
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $json.query['hub.challenge'] }}",
        "options": {}
      },
      "id": "55d79a92-8ba7-4d34-9a2c-11683cf6b8f8",
      "name": "Verification Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        -1100,
        -280
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "message-condition",
              "leftValue": "={{ $json.body.entry?.[0]?.messaging?.[0]?.message?.text }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "9241ac1a-e4b8-404a-b874-ba7c83eb5bbe",
      "name": "Message Filter",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -1100,
        -80
      ]
    },
    {
      "parameters": {
        "jsCode": "// Extract message data from Facebook webhook\nconst entry = $input.all()[0].json.body.entry[0];\nconst messaging = entry.messaging[0];\n\n// Extract key information\nconst senderId = messaging.sender.id;\nconst recipientId = messaging.recipient.id;\nconst messageText = messaging.message.text;\nconst messageId = messaging.message.mid;\nconst timestamp = messaging.timestamp;\n\n// Format data for AI processing\nreturn {\n  json: {\n    sender_id: senderId,\n    recipient_id: recipientId,\n    message_text: messageText,\n    message_id: messageId,\n    timestamp: timestamp,\n    conversation_context: `User message: \"${messageText}\"`\n  }\n};"
      },
      "id": "91ea8e5b-56eb-4f96-a526-3daf12834b0d",
      "name": "Extract Message Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -800,
        -100
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://openrouter.ai/api/v1/chat/completions",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "openai/gpt-4o-mini"
            },
            {
              "name": "messages",
              "value": "={{ [{\"role\": \"system\", \"content\": \"You are a helpful AI assistant representing a business on Facebook Messenger. Be friendly, professional, and concise in your responses. Always aim to be helpful and provide value to the customer. If you don't know something specific about the business, politely direct them to contact support or visit the website for more details. Keep responses under 160 characters when possible for better mobile experience.\"}, {\"role\": \"user\", \"content\": $json.message_text}] }}"
            },
            {
              "name": "max_tokens",
              "value": 150
            },
            {
              "name": "temperature",
              "value": 0.7
            }
          ]
        },
        "options": {}
      },
      "id": "ed53ac8d-7000-4d16-b8ba-a3acb270514f",
      "name": "OpenRouter AI Response",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -580,
        -100
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "4ZSh148T65DmZe5A",
          "name": "Header Auth account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Extract AI response from OpenRouter\nconst aiResponse = $json.choices[0].message.content;\n\n// Get sender_id from the Extract Message Data node\nconst messageDataItems = $('Extract Message Data').all();\nconst messageData = messageDataItems[0].json;\n\n// Clean and format the AI response\nconst cleanResponse = aiResponse.trim();\n\n// Prepare Facebook Send API payload\nreturn {\n  json: {\n    recipient: {\n      id: messageData.sender_id\n    },\n    message: {\n      text: cleanResponse\n    },\n    messaging_type: \"RESPONSE\"\n  }\n};"
      },
      "id": "71a01c84-2844-4e3e-ba01-ca2d6858912b",
      "name": "Format Response",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -360,
        -100
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://graph.facebook.com/v23.0/{{ $('Facebook Webhook').item.json.body.entry[0].messaging[0].recipient.id }}/messages?access_token=EAAV4NMSyV80BPDdheUc46LoPZAO263xiA0LXO6KEcQjeUc9nRoBgVoA4IPPYdZAvQqkQVZC6qps1OusqGpQXkdN7LmX6WjdkPAeXYBP2qi33hwvBz3fCo2x24l3HLnW4KRQQIxqRQWlm2KR2lFdsPv9GcGZAhZC6l0XQBRtfzDta9PZB0tpxt42Lg9y8thAyTEJxK3VvyZCUgZDZD\n",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"recipient\": {\n    \"id\": \"{{ $('Facebook Webhook').item.json.body.entry[0].messaging[0].sender.id }}\"\n  },\n  \"messaging_type\": \"RESPONSE\",\n  \"message\": {\n    \"text\": \"{{ $('OpenRouter AI Response').item.json.choices[0].message.content }}\"\n  }\n}",
        "options": {}
      },
      "id": "a90d3ca4-fd0e-4132-860b-f2dac4a3c449",
      "name": "Send Facebook Message",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -140,
        -100
      ]
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "OK",
        "options": {}
      },
      "id": "a56305a9-4c5b-4f3c-ae58-83d64e310ad3",
      "name": "Success Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        80,
        -100
      ]
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "No message to process",
        "options": {}
      },
      "id": "c2e78b54-151d-4531-9f86-f7e7642b5774",
      "name": "No Message Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        -800,
        -300
      ]
    },
    {
      "parameters": {
        "jsCode": "// Log incoming webhook data for debugging\nconsole.log('Incoming webhook data:', JSON.stringify($input.all()[0].json, null, 2));\n\n// Check if this is a message delivery confirmation or read receipt\nconst entry = $input.all()[0].json.body?.entry?.[0];\nconst messaging = entry?.messaging?.[0];\n\nif (messaging?.delivery || messaging?.read) {\n  console.log('Received delivery/read confirmation, skipping AI response');\n  return {\n    json: {\n      skip: true,\n      type: messaging.delivery ? 'delivery' : 'read'\n    }\n  };\n}\n\n// Pass through the original data if it's a regular message\nreturn $input.all()[0].json;"
      },
      "id": "3f4bba54-885e-4960-9b32-e8b17d197c6e",
      "name": "Debug and Filter",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1100,
        120
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "skip-condition",
              "leftValue": "={{ $json.skip }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equal"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "9975dc24-036b-4c91-ad4d-ad8d846ecf7d",
      "name": "Skip Check",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -800,
        100
      ]
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "Skipped delivery/read confirmation",
        "options": {}
      },
      "id": "5c82775b-ca0a-4122-98c7-0385228c1543",
      "name": "Skip Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        -580,
        200
      ]
    }
  ],
  "pinData": {},
  "connections": {
    "Facebook Webhook": {
      "main": [
        [
          {
            "node": "Webhook Verification Check",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook Verification Check": {
      "main": [
        [
          {
            "node": "Verification Response",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Message Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message Filter": {
      "main": [
        [
          {
            "node": "Extract Message Data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Debug and Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Message Data": {
      "main": [
        [
          {
            "node": "OpenRouter AI Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter AI Response": {
      "main": [
        [
          {
            "node": "Format Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Response": {
      "main": [
        [
          {
            "node": "Send Facebook Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Facebook Message": {
      "main": [
        [
          {
            "node": "Success Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Debug and Filter": {
      "main": [
        [
          {
            "node": "Skip Check",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Skip Check": {
      "main": [
        [
          {
            "node": "Skip Response",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Message Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Success Response": {
      "main": [
        [
          {
            "node": "Webhook Verification Check",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "29398d41-ec66-44c9-a38b-bc83dbc287ef",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "98d6538e67aa62455f1018d84ed76af63cc059e9885f3ae4fd53ae18172f44f4"
  },
  "id": "TFfCLzEFKETvCnXj",
  "tags": []
}